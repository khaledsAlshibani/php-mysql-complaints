### Variables
@baseUrl = {{$dotenv API_BASE_URL}}
@contentType = application/json

### Login as user
# @name userLogin
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
    "username": "testuser4",
    "password": "Test123!"
}

### Login as admin
# @name adminLogin
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
    "username": "admin",
    "password": "Admin123!"
}

### Create feedback for a complaint (as admin)
POST {{baseUrl}}/complaints/4/feedback
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

{
    "content": "This is a test feedback for the complaint"
}

### Get all feedback for a complaint (as user)
GET {{baseUrl}}/complaints/4/feedback
Content-Type: {{contentType}}
Authorization: Bearer {{userLogin.response.body.data.token}}

### Get all feedback for a complaint (as admin)
GET {{baseUrl}}/complaints/1/feedback
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

### Get specific feedback for a complaint (as user)
GET {{baseUrl}}/complaints/1/feedback/1
Content-Type: {{contentType}}
Authorization: Bearer {{userLogin.response.body.data.token}}

### Get specific feedback for a complaint (as admin)
GET {{baseUrl}}/complaints/4/feedback/3
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

### Update feedback for a complaint (as admin)
PUT {{baseUrl}}/complaints/4/feedback/5
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

{
    "content": "This is an updated test feedback for the complaint"
}

### Delete feedback for a complaint (as admin)
DELETE {{baseUrl}}/complaints/4/feedback/4
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

### Test Cases for Error Scenarios

### Try to create feedback as non-admin user
POST {{baseUrl}}/complaints/1/feedback
Content-Type: {{contentType}}
Authorization: Bearer {{userLogin.response.body.data.token}}

{
    "content": "This should fail - user is not admin"
}

### Try to update feedback as non-admin user
PUT {{baseUrl}}/complaints/1/feedback/1
Content-Type: {{contentType}}
Authorization: Bearer {{userLogin.response.body.data.token}}

{
    "content": "This should fail - user is not admin"
}

### Try to delete feedback as non-admin user
DELETE {{baseUrl}}/complaints/1/feedback/1
Content-Type: {{contentType}}
Authorization: Bearer {{userLogin.response.body.data.token}}

### Try to access feedback for non-existent complaint
GET {{baseUrl}}/complaints/999/feedback
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

### Try to access non-existent feedback
GET {{baseUrl}}/complaints/1/feedback/999
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

### Try to create feedback with invalid data
POST {{baseUrl}}/complaints/4/feedback
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

{
    "content": ""
}

### Try to update feedback with invalid data
PUT {{baseUrl}}/complaints/4/feedback/5
Content-Type: {{contentType}}
Authorization: Bearer {{adminLogin.response.body.data.token}}

{
    "content": ""
}